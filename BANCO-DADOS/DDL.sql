

DROP DATABASE IF EXISTS BARBEARIA;
CREATE DATABASE BARBEARIA CHARACTER SET utf8 COLLATE utf8_general_ci;
USE BARBEARIA;

DROP USER IF EXISTS 'barbearia'@'localhost';
CREATE USER 'barbearia'@'localhost' IDENTIFIED BY 'barbearia@1234';
GRANT SELECT, INSERT, UPDATE, DELETE, ALTER ON BARBEARIA.* TO 'barbearia'@'localhost';

CREATE TABLE TIPO_USUARIO (
    ID INT PRIMARY KEY,
    CARGO VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE BARBEARIA (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    NOME VARCHAR(100) NOT NULL,
    ENDERECO VARCHAR(255),
    TELEFONE VARCHAR(20),
    DATA_CRIACAO TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE USUARIO (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    ID_TIPO INT NOT NULL DEFAULT 3, 
    ID_BARBEARIA INT, 
    NOME VARCHAR(120) NOT NULL,
    EMAIL VARCHAR(100) NOT NULL UNIQUE,
    SENHA VARCHAR(255) NOT NULL,
    TELEFONE VARCHAR(20),
    DATA_CRIACAO TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    DATA_ATUALIZACAO TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (ID_TIPO) REFERENCES TIPO_USUARIO(ID),
    FOREIGN KEY (ID_BARBEARIA) REFERENCES BARBEARIA(ID)
);

CREATE TABLE SERVICO (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    ID_BARBEARIA INT NOT NULL,
    NOME VARCHAR(100) NOT NULL,
    DESCRICAO TEXT,
    PRECO DECIMAL(10,2) NOT NULL,
    DURACAO_MINUTOS INT NOT NULL,
    DATA_CRIACAO TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (ID_BARBEARIA) REFERENCES BARBEARIA(ID)
);

CREATE TABLE HORARIO_TRABALHO (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    ID_BARBEIRO INT NOT NULL,
    ID_BARBEARIA INT NOT NULL,
    DIA_SEMANA INT NOT NULL, 
    HORA_INICIO TIME NOT NULL,
    HORA_FIM TIME NOT NULL,
    INICIO_INTERVALO TIME,
    FIM_INTERVALO TIME,
    FOREIGN KEY (ID_BARBEIRO) REFERENCES USUARIO(ID),
    FOREIGN KEY (ID_BARBEARIA) REFERENCES BARBEARIA(ID)
);

CREATE INDEX idx_horario_barbeiro_dia ON HORARIO_TRABALHO(ID_BARBEIRO, ID_BARBEARIA, DIA_SEMANA);

CREATE TABLE BLOQUEIO_AGENDA (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    ID_BARBEIRO INT NOT NULL,
    ID_BARBEARIA INT NOT NULL,
    DATA_INICIO DATETIME NOT NULL,
    DATA_FIM DATETIME NOT NULL,
    MOTIVO VARCHAR(255),
    FOREIGN KEY (ID_BARBEIRO) REFERENCES USUARIO(ID),
    FOREIGN KEY (ID_BARBEARIA) REFERENCES BARBEARIA(ID)
);

CREATE INDEX idx_bloqueio_barbeiro_data ON BLOQUEIO_AGENDA(ID_BARBEIRO, ID_BARBEARIA, DATA_INICIO, DATA_FIM);

CREATE TABLE AGENDAMENTO (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    ID_CLIENTE INT NOT NULL,
    ID_BARBEIRO INT NOT NULL,
    ID_BARBEARIA INT NOT NULL,
    ID_SERVICO INT NOT NULL,
    DATA_CORTE DATE NOT NULL,
    HORA_CORTE TIME NOT NULL,
    STATUS ENUM('AGENDADO','CONFIRMADO','CONCLUIDO','CANCELADO_CLIENTE','CANCELADO_BARBEIRO','NAO_COMPARECEU') NOT NULL DEFAULT 'AGENDADO',
    PRECO_COBRADO DECIMAL(10,2) NOT NULL,
    OBSERVACOES TEXT,
    DATA_CRIACAO TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (ID_CLIENTE) REFERENCES USUARIO(ID),
    FOREIGN KEY (ID_BARBEIRO) REFERENCES USUARIO(ID),
    FOREIGN KEY (ID_BARBEARIA) REFERENCES BARBEARIA(ID),
    FOREIGN KEY (ID_SERVICO) REFERENCES SERVICO(ID)
);

CREATE INDEX idx_agendamento_barbeiro_data ON AGENDAMENTO(ID_BARBEIRO, ID_BARBEARIA, DATA_CORTE, HORA_CORTE);
CREATE INDEX idx_agendamento_cliente_data ON AGENDAMENTO(ID_CLIENTE, DATA_CORTE);

CREATE TABLE AVALIACAO (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    ID_AGENDAMENTO INT NOT NULL UNIQUE,
    NOTA INT NOT NULL CHECK (NOTA BETWEEN 1 AND 5),
    COMENTARIO TEXT,
    DATA_CRIACAO TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (ID_AGENDAMENTO) REFERENCES AGENDAMENTO(ID)
);

