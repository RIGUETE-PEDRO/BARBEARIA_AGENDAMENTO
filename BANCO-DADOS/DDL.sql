-- ===================================================================
-- SCRIPT COMPLETO REVISADO PARA BANCO DE DADOS DE BARBEARIA
-- ===================================================================

-- Apaga e recria o banco para um ambiente limpo
DROP DATABASE IF EXISTS BARBEARIA;
CREATE DATABASE BARBEARIA;
USE BARBEARIA;

-- Cria usuário específico para a aplicação
DROP USER IF EXISTS 'barbearia'@'localhost';
CREATE USER 'barbearia'@'localhost' IDENTIFIED BY 'barbearia@1234';
GRANT SELECT, INSERT, UPDATE, DELETE, ALTER ON BARBEARIA.* TO 'barbearia'@'localhost';

-- -------------------------------------------------------------------
-- TABELAS DE ESTRUTURA BÁSICA
-- -------------------------------------------------------------------

-- Papéis de usuário
CREATE TABLE TIPO_USUARIO (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    CARGO VARCHAR(50) NOT NULL UNIQUE
);

-- Usuários
CREATE TABLE USUARIO (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    ID_TIPO INT NOT NULL,
    NOME VARCHAR(120) NOT NULL,
    EMAIL VARCHAR(100) NOT NULL UNIQUE,
    SENHA VARCHAR(255) NOT NULL,
    TELEFONE VARCHAR(20),
    DATA_CRIACAO TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    DATA_ATUALIZACAO TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (ID_TIPO) REFERENCES TIPO_USUARIO(ID)
);

-- Catálogo de serviços
CREATE TABLE SERVICO (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    NOME VARCHAR(100) NOT NULL,
    DESCRICAO TEXT,
    PRECO DECIMAL(10,2) NOT NULL,
    DURACAO_MINUTOS INT NOT NULL,
    DATA_CRIACAO TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- -------------------------------------------------------------------
-- HORÁRIOS DE TRABALHO
-- -------------------------------------------------------------------

-- Jornada de trabalho por intervalo (permite múltiplos intervalos por dia)
CREATE TABLE HORARIO_TRABALHO (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    ID_BARBEIRO INT NOT NULL,
    DIA_SEMANA INT NOT NULL, -- 0=Domingo, 1=Segunda, ..., 6=Sábado
    HORA_INICIO TIME NOT NULL,
    HORA_FIM TIME NOT NULL,
    INICIO_INTERVALO TIME,
    FIM_INTERVALO TIME,
    FOREIGN KEY (ID_BARBEIRO) REFERENCES USUARIO(ID)
);

CREATE INDEX idx_horario_barbeiro_dia ON HORARIO_TRABALHO(ID_BARBEIRO, DIA_SEMANA);

-- Bloqueios específicos (férias, consultas médicas)
CREATE TABLE BLOQUEIO_AGENDA (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    ID_BARBEIRO INT NOT NULL,
    DATA_INICIO DATETIME NOT NULL,
    DATA_FIM DATETIME NOT NULL,
    MOTIVO VARCHAR(255),
    FOREIGN KEY (ID_BARBEIRO) REFERENCES USUARIO(ID)
);

CREATE INDEX idx_bloqueio_barbeiro_data ON BLOQUEIO_AGENDA(ID_BARBEIRO, DATA_INICIO, DATA_FIM);

-- -------------------------------------------------------------------
-- AGENDAMENTOS E FEEDBACK
-- -------------------------------------------------------------------

CREATE TABLE AGENDAMENTO (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    ID_CLIENTE INT NOT NULL,
    ID_BARBEIRO INT NOT NULL,
    ID_SERVICO INT NOT NULL,
    DATA_CORTE DATE NOT NULL,
    HORA_CORTE TIME NOT NULL,
    STATUS ENUM(
        'AGENDADO',
        'CONFIRMADO',
        'CONCLUIDO',
        'CANCELADO_CLIENTE',
        'CANCELADO_BARBEIRO',
        'NAO_COMPARECEU'
    ) NOT NULL DEFAULT 'AGENDADO',
    PRECO_COBRADO DECIMAL(10,2) NOT NULL,
    OBSERVACOES TEXT,
    DATA_CRIACAO TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (ID_CLIENTE) REFERENCES USUARIO(ID),
    FOREIGN KEY (ID_BARBEIRO) REFERENCES USUARIO(ID),
    FOREIGN KEY (ID_SERVICO) REFERENCES SERVICO(ID)
);

-- Índices para buscas rápidas
CREATE INDEX idx_agendamento_barbeiro_data ON AGENDAMENTO(ID_BARBEIRO, DATA_CORTE, HORA_CORTE);
CREATE INDEX idx_agendamento_cliente_data ON AGENDAMENTO(ID_CLIENTE, DATA_CORTE);

-- Avaliação de serviço
CREATE TABLE AVALIACAO (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    ID_AGENDAMENTO INT NOT NULL UNIQUE,
    NOTA INT NOT NULL CHECK (NOTA BETWEEN 1 AND 5),
    COMENTARIO TEXT,
    DATA_CRIACAO TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (ID_AGENDAMENTO) REFERENCES AGENDAMENTO(ID)
);

